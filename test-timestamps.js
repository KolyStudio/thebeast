/**
 * Test script pour v√©rifier les timestamps envoy√©s √† l'API
 * Ex√©cutez dans la console du navigateur
 */

function testTimestamps() {
  console.log('üïê Test des timestamps pour l\'API Plausible...');
  console.log('');
  
  const now = new Date();
  const thirtyMinutesAgo = new Date(now.getTime() - 30 * 60 * 1000);
  
  console.log('‚è∞ Heure actuelle (syst√®me):', now.toString());
  console.log('‚è∞ Il y a 30 minutes (syst√®me):', thirtyMinutesAgo.toString());
  console.log('');
  
  // M√©thode 1: UTC (ce qui causait le probl√®me)
  const startTimeUTC = thirtyMinutesAgo.toISOString();
  const endTimeUTC = now.toISOString();
  
  console.log('‚ùå M√©thode UTC (probl√©matique):');
  console.log('  Start:', startTimeUTC);
  console.log('  End:', endTimeUTC);
  console.log('  ‚Üí Affiche 06:xx au lieu de 08:xx');
  console.log('');
  
  // M√©thode 2: Conversion fran√ßaise (solution)
  const frenchOffset = 2 * 60 * 60 * 1000; // +2h en millisecondes
  const startTimeFrench = new Date(thirtyMinutesAgo.getTime() + frenchOffset);
  const endTimeFrench = new Date(now.getTime() + frenchOffset);
  
  const startTime = startTimeFrench.toISOString().replace('Z', '+02:00');
  const endTime = endTimeFrench.toISOString().replace('Z', '+02:00');
  
  console.log('‚úÖ M√©thode fran√ßaise (corrig√©e):');
  console.log('  Start:', startTime);
  console.log('  End:', endTime);
  console.log('  ‚Üí Affiche 08:xx (heure fran√ßaise correcte)');
  console.log('');
  
  // V√©rification des heures
  const startHour = parseInt(startTime.split('T')[1].split(':')[0]);
  const endHour = parseInt(endTime.split('T')[1].split(':')[0]);
  const currentHourFrench = parseInt(now.toLocaleTimeString('fr-FR', { 
    hour: '2-digit', 
    timeZone: 'Europe/Paris' 
  }).split(':')[0]);
  
  console.log('üîç V√©rification:');
  console.log('  Heure fran√ßaise actuelle:', currentHourFrench + 'h');
  console.log('  Heure dans le timestamp:', endHour + 'h');
  console.log('  Match:', endHour === currentHourFrench ? '‚úÖ OUI' : '‚ùå NON');
  
  return {
    utc: { start: startTimeUTC, end: endTimeUTC },
    french: { start: startTime, end: endTime },
    verification: {
      currentHourFrench,
      timestampHour: endHour,
      match: endHour === currentHourFrench
    }
  };
}

// Ex√©cuter le test
console.log('Pour tester les timestamps, ex√©cutez: testTimestamps()');

// Si vous voulez l'ex√©cuter automatiquement:
// testTimestamps();
